[{"D:\\work\\Junior-dev-project\\src\\index.js":"1","D:\\work\\Junior-dev-project\\src\\App.jsx":"2","D:\\work\\Junior-dev-project\\src\\pages\\Blogs\\index.jsx":"3","D:\\work\\Junior-dev-project\\src\\pages\\Products\\index.jsx":"4","D:\\work\\Junior-dev-project\\src\\components\\Layout\\index.jsx":"5","D:\\work\\Junior-dev-project\\src\\components\\NavigationMenu\\index.jsx":"6","D:\\work\\Junior-dev-project\\src\\routes.js":"7","D:\\work\\Junior-dev-project\\src\\pages\\404\\index.jsx":"8","D:\\work\\Junior-dev-project\\src\\components\\NavigationMenu\\menus.js":"9","D:\\work\\Junior-dev-project\\src\\components\\ProductAddCard\\index.jsx":"10","D:\\work\\Junior-dev-project\\src\\utilities\\index.js":"11","D:\\work\\Junior-dev-project\\src\\components\\ToastNotify\\index.jsx":"12","D:\\work\\Junior-dev-project\\src\\components\\ToastNotify\\iconList.js":"13","D:\\work\\Junior-dev-project\\src\\hooks\\useForm.js":"14","D:\\work\\Junior-dev-project\\src\\pages\\ProductAddEdit\\index.jsx":"15","D:\\work\\Junior-dev-project\\src\\pages\\ProductAddEdit\\ProductForm.jsx":"16","D:\\work\\Junior-dev-project\\src\\pages\\ProductAddEdit\\validationRules.js":"17","D:\\work\\Junior-dev-project\\src\\pages\\Products\\ProductCard.jsx":"18","D:\\work\\Junior-dev-project\\src\\pages\\Products\\ProductTable.jsx":"19","D:\\work\\Junior-dev-project\\src\\pages\\Products\\DeleteModal.jsx":"20","D:\\work\\Junior-dev-project\\src\\pages\\Products\\GridView.jsx":"21","D:\\work\\Junior-dev-project\\src\\components\\FloatingFormGroup\\index.jsx":"22","D:\\work\\Junior-dev-project\\src\\pages\\Products\\ProductFilters.jsx":"23","D:\\work\\Junior-dev-project\\src\\pages\\ProductAddEdit\\AutoCompleteModal.jsx":"24","D:\\work\\Junior-dev-project\\src\\pages\\ProductDetail\\index.jsx":"25","D:\\work\\Junior-dev-project\\src\\pages\\ProductDetail\\AvailableColors.jsx":"26","D:\\work\\Junior-dev-project\\src\\pages\\ProductDetail\\AvailableSizes.jsx":"27","D:\\work\\Junior-dev-project\\src\\components\\LinkToPage\\index.jsx":"28","D:\\work\\Junior-dev-project\\src\\pages\\Blogs\\BlogItem.jsx":"29","D:\\work\\Junior-dev-project\\src\\pages\\BlogAddEdit\\index.jsx":"30","D:\\work\\Junior-dev-project\\src\\pages\\BlogAddEdit\\BlogForm.jsx":"31","D:\\work\\Junior-dev-project\\src\\pages\\BlogAddEdit\\validationRules.js":"32"},{"size":235,"mtime":1612188368842,"results":"33","hashOfConfig":"34"},{"size":1088,"mtime":1612456184246,"results":"35","hashOfConfig":"34"},{"size":1117,"mtime":1612524771853,"results":"36","hashOfConfig":"34"},{"size":2542,"mtime":1612460181005,"results":"37","hashOfConfig":"34"},{"size":544,"mtime":1612522727896,"results":"38","hashOfConfig":"34"},{"size":661,"mtime":1612459893007,"results":"39","hashOfConfig":"34"},{"size":1247,"mtime":1612525292865,"results":"40","hashOfConfig":"34"},{"size":262,"mtime":1612187483425,"results":"41","hashOfConfig":"34"},{"size":157,"mtime":1612370686086,"results":"42","hashOfConfig":"34"},{"size":675,"mtime":1612340365265,"results":"43","hashOfConfig":"34"},{"size":560,"mtime":1612526883075,"results":"44","hashOfConfig":"34"},{"size":1334,"mtime":1612288311008,"results":"45","hashOfConfig":"34"},{"size":387,"mtime":1612286896839,"results":"46","hashOfConfig":"34"},{"size":856,"mtime":1612345069314,"results":"47","hashOfConfig":"34"},{"size":972,"mtime":1612522934641,"results":"48","hashOfConfig":"34"},{"size":3810,"mtime":1612518154540,"results":"49","hashOfConfig":"34"},{"size":331,"mtime":1612367434457,"results":"50","hashOfConfig":"34"},{"size":2057,"mtime":1612372157681,"results":"51","hashOfConfig":"34"},{"size":1665,"mtime":1612505835148,"results":"52","hashOfConfig":"34"},{"size":1365,"mtime":1612378961742,"results":"53","hashOfConfig":"34"},{"size":1242,"mtime":1612432742349,"results":"54","hashOfConfig":"34"},{"size":1176,"mtime":1612524375939,"results":"55","hashOfConfig":"34"},{"size":3865,"mtime":1612436316338,"results":"56","hashOfConfig":"34"},{"size":1247,"mtime":1612438074033,"results":"57","hashOfConfig":"34"},{"size":2081,"mtime":1612520486885,"results":"58","hashOfConfig":"34"},{"size":497,"mtime":1612508063899,"results":"59","hashOfConfig":"34"},{"size":927,"mtime":1612517506190,"results":"60","hashOfConfig":"34"},{"size":333,"mtime":1612520467745,"results":"61","hashOfConfig":"34"},{"size":1281,"mtime":1612526922838,"results":"62","hashOfConfig":"34"},{"size":952,"mtime":1612523463045,"results":"63","hashOfConfig":"34"},{"size":2926,"mtime":1612526056326,"results":"64","hashOfConfig":"34"},{"size":326,"mtime":1612524071623,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"urlfo2",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\Junior-dev-project\\src\\index.js",[],["136","137"],"D:\\work\\Junior-dev-project\\src\\App.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\Blogs\\index.jsx",["138"],"D:\\work\\Junior-dev-project\\src\\pages\\Products\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\components\\Layout\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\components\\NavigationMenu\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\routes.js",[],"D:\\work\\Junior-dev-project\\src\\pages\\404\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\components\\NavigationMenu\\menus.js",[],"D:\\work\\Junior-dev-project\\src\\components\\ProductAddCard\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\utilities\\index.js",[],"D:\\work\\Junior-dev-project\\src\\components\\ToastNotify\\index.jsx",[],["139","140"],"D:\\work\\Junior-dev-project\\src\\components\\ToastNotify\\iconList.js",[],"D:\\work\\Junior-dev-project\\src\\hooks\\useForm.js",[],"D:\\work\\Junior-dev-project\\src\\pages\\ProductAddEdit\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\ProductAddEdit\\ProductForm.jsx",["141","142","143"],"import React, { useEffect, useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Button, Col, Form, FormGroup } from \"reactstrap\"\r\nimport * as Icon from \"react-feather\"\r\nimport { toast } from \"react-toastify\"\r\nimport { countProperties } from \"../../utilities\"\r\nimport useForm from \"../../hooks/useForm\"\r\nimport FloatingFormGroup from \"../../components/FloatingFormGroup\"\r\nimport AutoCompleteModal from \"./AutoCompleteModal\"\r\nimport { validate } from \"./validationRules\"\r\n\r\nconst ProductForm = ({ id, editMode }) => {\r\n  const history = useHistory()\r\n  const [autoCompleteModal, setAutoCompleteModal] = useState(false)\r\n\r\n  const submitData = () => {\r\n    const products = localStorage.getItem(\"products\")\r\n      ? JSON.parse(localStorage.getItem(\"products\"))\r\n      : []\r\n    const newId = products.length ? products[products.length - 1].id + 1 : 1\r\n    const objId = editMode ? id : newId\r\n    localStorage.setItem(\r\n      \"products\",\r\n      JSON.stringify([\r\n        ...(editMode\r\n          ? products.filter((product) => product.id != id)\r\n          : products),\r\n        { id: objId, ...values },\r\n      ])\r\n    )\r\n    editMode\r\n      ? toast.success(\"Updated Product\")\r\n      : toast.success(\"Added New Product\")\r\n    history.goBack()\r\n  }\r\n\r\n  const { handleChange, handleSubmit, setValues, values, errors } = useForm(\r\n    submitData,\r\n    validate\r\n  )\r\n  useEffect(() => {\r\n    if (\r\n      !editMode && localStorage.getItem(\"productFilters\")\r\n        ? countProperties(JSON.parse(localStorage.getItem(\"productFilters\")))\r\n        : false\r\n    ) {\r\n      setAutoCompleteModal(true)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      let products = JSON.parse(localStorage.getItem(\"products\"))\r\n      let product = products.filter((product) => product.id == id)\r\n      setValues({ ...product[0] })\r\n    }\r\n  }, [id, setValues])\r\n\r\n  const formMapper = [\r\n    {\r\n      name: \"name\",\r\n      type: \"text\",\r\n      defaultValue: \"\",\r\n      validation: true,\r\n      dynamicAttributes: {\r\n        onChange: handleChange,\r\n      },\r\n      col: 6,\r\n    },\r\n    {\r\n      name: \"code\",\r\n      type: \"text\",\r\n      defaultValue: \"\",\r\n      validation: true,\r\n      dynamicAttributes: {\r\n        onChange: handleChange,\r\n      },\r\n      col: 6,\r\n    },\r\n    {\r\n      name: \"price\",\r\n      type: \"number\",\r\n      defaultValue: \"\",\r\n      validation: true,\r\n      dynamicAttributes: {\r\n        onChange: handleChange,\r\n      },\r\n      col: 6,\r\n    },\r\n    {\r\n      name: \"url\",\r\n      type: \"text\",\r\n      defaultValue: \"\",\r\n      dynamicAttributes: {\r\n        onChange: handleChange,\r\n        rows: \"10\",\r\n      },\r\n      col: 6,\r\n    },\r\n    {\r\n      name: \"description\",\r\n      type: \"textarea\",\r\n      defaultValue: \"\",\r\n      dynamicAttributes: {\r\n        onChange: handleChange,\r\n      },\r\n      col: 12,\r\n    },\r\n  ]\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <FormGroup row>\r\n          {formMapper.map((mapper) => (\r\n            <Col sm={mapper.col} key={mapper.name}>\r\n              <FloatingFormGroup\r\n                {...mapper}\r\n                errors={errors}\r\n                value={values[mapper.name]}\r\n              />\r\n            </Col>\r\n          ))}\r\n          <Col sm={12}>\r\n            <FormGroup>\r\n              <Button size='sm' color='info' onClick={handleSubmit}>\r\n                <Icon.Save className='mr-2' strokeWidth='1' />\r\n                {editMode ? \"Update\" : \"Add\"}\r\n              </Button>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n      {autoCompleteModal && (\r\n        <AutoCompleteModal\r\n          className=''\r\n          modal={autoCompleteModal}\r\n          setModal={setAutoCompleteModal}\r\n          setValues={setValues}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductForm\r\n","D:\\work\\Junior-dev-project\\src\\pages\\ProductAddEdit\\validationRules.js",[],"D:\\work\\Junior-dev-project\\src\\pages\\Products\\ProductCard.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\Products\\ProductTable.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\Products\\DeleteModal.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\Products\\GridView.jsx",[],"D:\\work\\Junior-dev-project\\src\\components\\FloatingFormGroup\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\Products\\ProductFilters.jsx",["144"],"import React, { useState, useEffect } from \"react\"\r\nimport { FormGroup, Col, Button } from \"reactstrap\"\r\nimport { X } from \"react-feather\"\r\nimport FloatingFormGroup from \"../../components/FloatingFormGroup\"\r\nimport { countProperties } from \"../../utilities\"\r\n\r\nconst ProductFilters = ({ allProducts, products, setProducts }) => {\r\n  const [filters, setFilters] = useState(\r\n    localStorage.getItem(\"productFilters\")\r\n      ? JSON.parse(localStorage.getItem(\"productFilters\"))\r\n      : {}\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (countProperties(filters)) {\r\n      const filteredProducts = allProducts.filter((product) => {\r\n        return Object.keys(filters).every((key) => {\r\n          return product[key].toLowerCase().includes(filters[key].toLowerCase())\r\n        })\r\n      })\r\n      setProducts(filteredProducts)\r\n    } else {\r\n      setProducts(allProducts)\r\n    }\r\n    localStorage.setItem(\"productFilters\", JSON.stringify(filters))\r\n  }, [filters, allProducts])\r\n\r\n  const clearSelectedFilter = (selectedKey) => {\r\n    const restObj = {}\r\n    Object.keys(filters).forEach((key) => {\r\n      if (key !== selectedKey) {\r\n        restObj[key] = filters[key]\r\n      }\r\n    })\r\n    setFilters(restObj)\r\n  }\r\n\r\n  const clearAllFilter = () => {\r\n    setFilters({})\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    if (e.target.value) {\r\n      setFilters({\r\n        ...filters,\r\n        [e.target.name]: e.target.value,\r\n      })\r\n    } else {\r\n      clearSelectedFilter(e.target.name)\r\n    }\r\n  }\r\n\r\n  const mappers = [\r\n    {\r\n      name: \"name\",\r\n      type: \"text\",\r\n      defaultValue: \"\",\r\n      validation: true,\r\n      dynamicAttributes: {\r\n        onChange: handleSearch,\r\n      },\r\n      col: 4,\r\n    },\r\n    {\r\n      name: \"code\",\r\n      type: \"text\",\r\n      defaultValue: \"\",\r\n      validation: true,\r\n      dynamicAttributes: {\r\n        onChange: handleSearch,\r\n      },\r\n      col: 3,\r\n    },\r\n    {\r\n      name: \"price\",\r\n      type: \"number\",\r\n      defaultValue: \"\",\r\n      validation: true,\r\n      dynamicAttributes: {\r\n        onChange: handleSearch,\r\n      },\r\n      col: 3,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div className='mt-3'>\r\n      <div className='mb-2'>\r\n        <span>Filter Data:</span>\r\n      </div>\r\n      <div>\r\n        <FormGroup row>\r\n          {mappers.map((mapper) => (\r\n            <Col sm={mapper.col} key={mapper.name}>\r\n              <FloatingFormGroup\r\n                {...mapper}\r\n                value={\r\n                  mapper.name in filters\r\n                    ? filters[mapper.name]\r\n                    : mapper.defaultValue\r\n                }\r\n              />\r\n            </Col>\r\n          ))}\r\n        </FormGroup>\r\n      </div>\r\n      <div>\r\n        {countProperties(filters) ? (\r\n          <div>\r\n            <div>Search:</div>\r\n            {Object.keys(filters).map((key) => (\r\n              <Button\r\n                key={key}\r\n                className='mr-2'\r\n                color='primary'\r\n                onClick={() => clearSelectedFilter(key)}\r\n              >\r\n                <span>\r\n                  <span className='text-capitalize'> {key}</span> :{\" \"}\r\n                  {filters[key]}\r\n                </span>\r\n                <span className='ml-2'>\r\n                  <X size='15' color='black' />\r\n                </span>\r\n              </Button>\r\n            ))}\r\n            {countProperties(filters) > 1 && (\r\n              <Button\r\n                className='mr-2'\r\n                color='danger'\r\n                onClick={() => clearAllFilter()}\r\n              >\r\n                <span className='text-capitalize'>Clear All</span>\r\n                <span className='ml-2'>\r\n                  <X size='15' color='black' />\r\n                </span>\r\n              </Button>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductFilters\r\n","D:\\work\\Junior-dev-project\\src\\pages\\ProductAddEdit\\AutoCompleteModal.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\ProductDetail\\index.jsx",["145","146","147"],"import React, { useEffect, useState } from \"react\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { capitalize } from \"../../utilities\"\r\nimport Layout from \"../../components/Layout\"\r\nimport LinkToPage from \"../../components/LinkToPage\"\r\nimport AvailableColors from \"./AvailableColors\"\r\nimport AvailableSizes from \"./AvailableSizes\"\r\nimport Style from \"./product-detail.module.scss\"\r\nimport defaultImage from \"./defaultImage.png\"\r\n\r\nconst ProductDetail = ({ editMode }) => {\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n  const [product, setProduct] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const products = localStorage.getItem(\"products\")\r\n      ? JSON.parse(localStorage.getItem(\"products\"))\r\n      : []\r\n    const product = products.filter((product) => product.id == id)\r\n    setProduct(product.length ? product[0] : null)\r\n  }, [])\r\n\r\n  const availableColors = [\"tomato\", \"blue\", \"brown\", \"grey\"]\r\n  const availableSizes = [\r\n    \"Extra Bulky\",\r\n    \"Standard\",\r\n    \"Head top\",\r\n    \"kids size\",\r\n    \"Standard\",\r\n  ]\r\n  return (\r\n    <Layout title={product.name ? capitalize(product.name) : \"\"}>\r\n      <LinkToPage to='/products' title='Back to Products' />\r\n      <div className={Style.productDetail}>\r\n        <div className={Style.imageContainer}>\r\n          <img src={product.url ? product.url : defaultImage} alt='' />\r\n        </div>\r\n        <div className={Style.detailContainer}>\r\n          <div className='mb-3'>\r\n            <h5 className='text-capitalize mb-0'>{product.name}</h5>\r\n            <span className='text-secondary'>{product.code}</span>\r\n          </div>\r\n          <div>\r\n            <span>Price: </span>\r\n            <span className='text-info'>$ {product.price}</span>\r\n          </div>\r\n          <AvailableColors colors={availableColors} />\r\n          <AvailableSizes sizes={availableSizes} />\r\n          <div>\r\n            <h6>Description:</h6>\r\n            <span>{product.description || \"\"}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ProductDetail\r\n","D:\\work\\Junior-dev-project\\src\\pages\\ProductDetail\\AvailableColors.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\ProductDetail\\AvailableSizes.jsx",["148"],"import React, { useEffect, useState } from \"react\"\r\nimport Style from \"./available-attributes.module.scss\"\r\n\r\nconst AvailableSizes = ({ sizes, show = false }) => {\r\n  const [showAll, setShowAll] = useState(show)\r\n  const [filteredSizes, setFilterSizes] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (!showAll) {\r\n      setFilterSizes([...sizes.slice(0, 2)])\r\n    } else {\r\n      setFilterSizes([...sizes])\r\n    }\r\n  }, [showAll])\r\n\r\n  return (\r\n    <div className='my-4'>\r\n      <h6>Available Sizes: </h6>\r\n\r\n      <div className={Style.sizesContainer}>\r\n        {filteredSizes.map((size, sizeKey) => (\r\n          <span key={sizeKey} className={Style.sizeButton}>\r\n            {size}\r\n          </span>\r\n        ))}\r\n        <span className={Style.moreButton} onClick={() => setShowAll(!showAll)}>\r\n          Show {showAll ? \"Less\" : \"More\"}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AvailableSizes\r\n","D:\\work\\Junior-dev-project\\src\\components\\LinkToPage\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\Blogs\\BlogItem.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\BlogAddEdit\\index.jsx",[],"D:\\work\\Junior-dev-project\\src\\pages\\BlogAddEdit\\BlogForm.jsx",["149","150","151"],"D:\\work\\Junior-dev-project\\src\\pages\\BlogAddEdit\\validationRules.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":23},{"ruleId":"152","replacedBy":"160"},{"ruleId":"154","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":26,"column":53,"nodeType":"164","messageId":"165","endLine":26,"endColumn":55},{"ruleId":"166","severity":1,"message":"167","line":49,"column":6,"nodeType":"168","endLine":49,"endColumn":8,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"170","line":54,"column":61,"nodeType":"164","messageId":"165","endLine":54,"endColumn":63},{"ruleId":"166","severity":1,"message":"171","line":26,"column":6,"nodeType":"168","endLine":26,"endColumn":28,"suggestions":"172"},{"ruleId":"156","severity":1,"message":"173","line":12,"column":9,"nodeType":"158","messageId":"159","endLine":12,"endColumn":16},{"ruleId":"162","severity":1,"message":"170","line":20,"column":61,"nodeType":"164","messageId":"165","endLine":20,"endColumn":63},{"ruleId":"166","severity":1,"message":"174","line":22,"column":6,"nodeType":"168","endLine":22,"endColumn":8,"suggestions":"175"},{"ruleId":"166","severity":1,"message":"176","line":14,"column":6,"nodeType":"168","endLine":14,"endColumn":15,"suggestions":"177"},{"ruleId":"156","severity":1,"message":"178","line":1,"column":28,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"162","severity":1,"message":"163","line":22,"column":55,"nodeType":"164","messageId":"165","endLine":22,"endColumn":57},{"ruleId":"162","severity":1,"message":"170","line":38,"column":49,"nodeType":"164","messageId":"165","endLine":38,"endColumn":51},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'filteredBlogs' is assigned a value but never used.","Identifier","unusedVar",["179"],["180"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'editMode'. Either include it or remove the dependency array.","ArrayExpression",["181"],"Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'setProducts'. Either include it or remove the dependency array. If 'setProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["182"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["183"],"React Hook useEffect has a missing dependency: 'sizes'. Either include it or remove the dependency array. If 'setFilterSizes' needs the current value of 'sizes', you can also switch to useReducer instead of useState and read 'sizes' in the reducer.",["184"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [editMode]",{"range":"193","text":"194"},"Update the dependencies array to be: [filters, allProducts, setProducts]",{"range":"195","text":"196"},"Update the dependencies array to be: [id]",{"range":"197","text":"198"},"Update the dependencies array to be: [showAll, sizes]",{"range":"199","text":"200"},[1630,1632],"[editMode]",[943,965],"[filters, allProducts, setProducts]",[874,876],"[id]",[419,428],"[showAll, sizes]"]